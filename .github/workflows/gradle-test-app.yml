name: gradle_app_test

on:
  workflow_call:
    inputs:
      app:
        type: string
        required: true
      repository:
        type: string
        required: true
      revision:
        type: string
        required: true
      xray-submit-report:
        type: boolean
        required: false
        default: false

jobs:

  test:
  
   runs-on: ubuntu-latest

   # env:
   #   POSTGRES_PASSWORD: password
   #   POSTGRES_DB: bkms-mediator-test
   #   POSTGRES_USER: bkms-mediator

   services:
     # Label used to access the service container
     postgres:
       # Docker Hub image
       image: postgres:13.4
       # Provide the password for postgres
       env:
         POSTGRES_PASSWORD: password
         POSTGRES_DB: ${{ inputs.app }}-test
         POSTGRES_USER: ${{ inputs.app }}
       # Set health checks to wait until postgres has started
       options: >-
         --health-cmd pg_isready
         --health-interval 10s
         --health-timeout 5s
         --health-retries 5
       ports:
         # Maps tcp port 5432 on service container to the host
         - 5432:5432

   steps:

     - uses: actions/checkout@v3
       name: Checkout project
       with:
         repository: ${{inputs.repository}}
         ref: ${{inputs.revision}}
         token: ${{ secrets.REPO_ACCESS_TOKEN }}
         fetch-depth: 0

     - name: Project setup
       uses: ./.github/actions/setup_jdk

     - name: XRAY - setup vars for report
       shell: bash
       run: |
         echo "XRAY_BEGIN_DATE=$(date +%Y-%m-%dT%R:%S.000%z)" >> $GITHUB_ENV
         echo "XRAY_REVISION=${{inputs.revision}}" >> $GITHUB_ENV
         echo "XRAY_APP_NAME=${{inputs.appName}}" >> $GITHUB_ENV

     - name: Run unit-tests
       id: run_tests
       uses: gradle/gradle-build-action@v2
       with:
         arguments: test xrayTests --info -Pgpr.key=${{ secrets.GHP_XRAY_TOKEN }}

     - name: XRAY - Create xray-info.json
       shell: bash
       run: |
         export XRAY_END_DATE=$(date +%Y-%m-%dT%R:%S.000%z)

         cat > xray-info-json.tpl <<EOF
         {
           "fields": {
               "project": {
                     "key": "$XRAY_PROJECT_KEY"
                 },
                 "summary": "Automatic Test execution",
                 "issuetype": {
                     "id": "11702"
                 },
                 "customfield_21317": "$XRAY_BEGIN_DATE",
                 "customfield_21318": "$XRAY_END_DATE",
                 "customfield_21319": "$XRAY_REVISION",
                 "customfield_21327": ["$XRAY_TESTPLAN_KEY"],
                 "customfield_21325": ["Github"]
           }
         }
         EOF

         envsubst  < xray-info-json.tpl > xray-info.json
         cat xray-info.json

     - name: XRAY - send results to JIRA
       if: ${{ inputs.xray-submit-report }}
       uses: mikepenz/xray-action@v2.3.0
       continue-on-error: true
       timeout-minutes: 5
       with:
         username: ${{ secrets.XRAY_API_TESTREPORT_USERNAME }}
         password: ${{ secrets.XRAY_API_TESTREPORT_PASSWORD }}
         xrayCloud: "false"
         xrayBaseUrl: "https://jira.nortal.com"
         testFormat: "junit"
         testPaths: "**/reports/*.xml"
         testEnvironments: GitHub
         testPlanKey: ${{ inputs.xray-plan-key }} #see https://jira.nortal.com/browse/D602904-101#view-issue-testplan-testexecs-section_heading
         projectKey: ${{ inputs.xray-project-key }}
         testExecutionJson: xray-info.json





