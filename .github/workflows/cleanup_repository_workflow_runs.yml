# This workflow creates a release for the application.
#
name: "cleanup repository workflow runs"

on:
  workflow_dispatch:

  #schedule:
  #  - cron: "0 0 * * *"

concurrency:
  group: cleanup_repository_workflow_runs

permissions:
  actions: write

jobs:

  get_repos:
    runs-on: ubuntu-latest

    outputs:
      repos: ${{ steps.get_repos.outputs.repos }}

    steps:
      - name: get repos
        id: get_repos
        shell: bash
        env:
          GH_TOKEN: ${{secrets.REPO_WORKFLOWS_CLEANUP_TOKEN}}
        run: |
          echo "repos=$(gh repo list EFA-FHB --visibility=private | awk '{print$1}' | jq -cnR '[inputs]')" >> $GITHUB_OUTPUT

  cleanup:
    needs: [get_repos]
    runs-on: ubuntu-latest
    continue-on-error: true

    strategy:
      matrix:
        repo: ${{ fromJson(needs.get_repos.outputs.repos) }}

    name: "clean ${{matrix.repo}}"
    steps:

      - uses: actions/checkout@v3

      - name: cleanup_workflow_runs
        uses: ./.github/actions/cleanup_workflow_runs
        with:
          retain-max-run-count: 200
          token: ${{secrets.REPO_WORKFLOWS_CLEANUP_TOKEN}}
          repo: "${{matrix.repo}}"