name: get_version
description: "Retrieves the current version from the specified version file"

inputs:
  versionFileName:
    description: "Name of file which contains version information."
    required: true
outputs:
  version:
    description: "Retrieved version information"
    value: ${{ steps.gradle_properties.outputs.value || steps.package_json.outputs.current-version }}
runs:
  using: "composite"

  steps:

    - name: check version file name
      id: check_version_file_name
      shell: bash
      env:
        VERSION_FILE_NAME: ${{inputs.versionFileName}}
        DEBUG: ${{inputs.debug}}
      run: |
        VERSION_FILE_NAME=$(echo "${{env.VERSION_FILE_NAME}}")
        for file in gradle.properties package.json; do {
          if [[ "${VERSION_FILE_NAME}" ]]; then
            exit 0
          fi
        } done

        echo "${VERSION_FILE_NAME} is invalid. Must be one of [ ${supported_files} ]"
        exit 1;

    - name: "handle gradle.properties"
      id: gradle_properties
      if: ${{inputs.versionFileName == 'gradle.properties' }}
      shell: bash
      run: |
        version=$(grep -E "version" "${{github.workspace}}/gradle.properties" | cut -d "=" -f2)
        echo "version=${version}" >> $GITHUB_OUTPUT

    - name: "handle package.json"
      id: package_json
      if: ${{inputs.versionFileName == 'package.json' }}
      shell: bash
      run: |
        version=$(jq < "${{github.workspace}}/package.json" .version | tr -d '"')
        echo "version=${version}" >> $GITHUB_OUTPUT
