name: gradle_xray_test
description: "Runs tests with Gradle"

inputs:
  app:
    description: "Name of application"
    required: true
  xray-send-reports-to-jira:
    description: "Whether to submit XRAY Test-Reports to JIRA"
    required: false
    default: "false"
  xray-ghp-token:
    description: "Token to fetch xray extensions from Github"
    required: true
  xray-api-username:
    description: "Username for submission of test-reports"
    required: false
    default: ""
  xray-api-password:
    description: "Password for submission of test-reports"
    required: false
    default: ""
  xray-testplan-key:
    description: "Jira key belonging to the XRAY Test plan"
    required: false
    default: ""
  xray-project-key:
    description: "Jira key belonging to the XRAY test project"
    required: false
    default: ""

runs:
  using: "composite"

  steps:
    - name: XRAY - setup vars for report
      shell: bash
      if: ${{ inputs.xray-send-reports-to-jira == 'true' }}
      run: |
        missing_args=()
        [[ -z "${{inputs.xray-api-username}}" ]] && missing_args+=(xray-api-username)
        [[ -z "${{inputs.xray-api-password}}" ]] && missing_args+=(xray-api-password)
        [[ -z "${{inputs.xray-testplan-key}}" ]] && missing_args+=(xray-testplan-key)
        [[ -z "${{inputs.xray-project-key}}" ]] && missing_args+=(xray-project-key)

        if [[ ${#missing_args} -gt 0 ]]; then
          echo -e "Sending reports not possible";
          echo -e "You must specify the following action arguments: $(echo ${missing_args[*]} | sed 's/ /, /g')";
          exit 1;
        fi

        echo "XRAY_BEGIN_DATE=$(date +%Y-%m-%dT%R:%S.000%z)" >> $GITHUB_ENV
        echo "XRAY_REVISION=${{github.sha}}" >> $GITHUB_ENV
        echo "XRAY_APP_NAME=$app" >> $GITHUB_ENV
        echo "XRAY_TESTPLAN_KEY=${{inputs.xray-testplan-key}}" >> $GITHUB_ENV

    - name: Run unit-tests
      id: run_tests
      uses: gradle/gradle-build-action@v2
      with:
        arguments: test --info -Pgpr.key=${{ inputs.xray-ghp-token }}

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails
      with:
        report_paths: '**/build/test-results/test/TEST-*.xml'
        annotate_only: true

    - name: XRAY - Create xray-info.json
      if: ${{ inputs.xray-send-reports-to-jira == 'true' }}
      shell: bash
      run: |
        export XRAY_END_DATE=$(date +%Y-%m-%dT%R:%S.000%z)

        cat > xray-info-json.tpl <<EOF
        {
          "fields": {
              "project": {
                    "key": "$XRAY_PROJECT_KEY"
                },
                "summary": "Automatic Test execution",
                "issuetype": {
                    "id": "11702"
                },
                "customfield_21317": "$XRAY_BEGIN_DATE",
                "customfield_21318": "$XRAY_END_DATE",
                "customfield_21319": "$XRAY_REVISION",
                "customfield_21327": ["$XRAY_TESTPLAN_KEY"],
                "customfield_21325": ["Github"]
          }
        }
        EOF

        envsubst  < xray-info-json.tpl > xray-info.json
        cat xray-info.json

    - name: XRAY - send results to JIRA
      if: ${{ inputs.xray-send-reports-to-jira == 'true' }}
      uses: mikepenz/xray-action@v2.3.0
      continue-on-error: true
      #timeout-minutes: 5
      with:
        username: ${{ inputs.xray-api-username }}
        password: ${{ inputs.xray-api-password }}
        xrayCloud: "false"
        xrayBaseUrl: "https://jira.nortal.com"
        testFormat: "junit"
        testPaths: "**/reports/*.xml"
        testEnvironments: GitHub
        testPlanKey: ${{ inputs.xray-testplan-key }} #see https://jira.nortal.com/browse/D602904-101#view-issue-testplan-testexecs-section_heading
        projectKey: ${{ inputs.xray-project-key }}
        testExecutionJson: xray-info.json





