name: create_release
description: "Creates a release"

inputs:
  gpg_private_key:
    description: "GPG Private key to import for tag signing"
    required: true
  gpg_passphrase:
    description: "GPG Passphrase to import private-key"
    required: true
  token:
    description: "Token required to trigger the workflow."
    required: true
  draft:
    description: "Indicator of whether or not this release is a draft"
    required: false
  prerelease:
    description: "Indicator of whether or not is a prerelease"
    required: false
  name:
    description: "Name of the release. defaults to tag name"
    required: false
  release_type:
    description: "Indicator of the release type"
    required: true

runs:
  using: "composite"

  steps:

    - name: import gpg
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v5.0.0
      with:
        gpg_private_key: ${{ inputs.gpg_private_key }}
        passphrase: ${{ inputs.gpg_passphrase }}
        git_config_global: true
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: create tag
      id: tag
      uses: mathieudutour/github-tag-action@v6.0
      with:
        github_token: ${{ inputs.token }}
        default_bump: ${{inputs.release_type}}
        dry_run: true
        release_branches: "release.*,hotfix.*,main"

    - name: find version file
      id: version_file
      shell: bash
      run: |
        for file in gradle.properties package.json; do {
          find $file &> /dev/null
          if [[ $(echo $?) -eq 0 ]]; then
            echo "::set-output name=value::$file"
            break;
          fi
        } done

    - name: commit tag + version
      shell: bash
      env:
        versionFile: ${{steps.version_file.outputs.value}}
        newTag: ${{steps.tag.outputs.new_tag}}
        newVersion: ${{steps.tag.outputs.new_version}}
        GITHUB_TOKEN: ${{ inputs.token }}
        GIT_AUTHOR_NAME: ${{ steps.import_gpg.outputs.name }}
        GIT_AUTHOR_EMAIL: ${{ steps.import_gpg.outputs.email }}
        GIT_COMMITTER_NAME: ${{ steps.import_gpg.outputs.name }}
        GIT_COMMITTER_EMAIL: ${{ steps.import_gpg.outputs.email }}
      run: |

        if [[ "${{env.versionFile}}" == "gradle.properties" ]]; then
          sed -i -E "s/(version=).*/\1${{env.newVersion}}/" ${{env.versionFile}}
        fi

        if [[ "${{env.versionFile}}" == "package.json" ]]; then
          sed -i -E "s/(\"version\": ).*/\1\"${{env.newVersion}}\" /" ${{env.versionFile}}
        fi

        git commit -S -m "[github] update version --skip-msg-validation" -- ${{env.versionFile}} &> /dev/null

        tag="${{env.newTag}}"

        git tag -sam "[github] create new tag" $tag

    - name: git push
      uses: CasperWA/push-protected@v2.10.0
      with:
        token: ${{ inputs.token }}
        tags: true
        branch: ${{ GITHUB_REF_NAME }}
        debug: true

    - name: changelog config template
      id: changelog_config_path
      shell: bash
      run: |
        config_path=$(find . -name "changelog-config.json" | head -1)
        echo $config_path
        echo "::set-output name=value::${config_path}"

    - name: Build Changelog
      id: github_release
      uses: mikepenz/release-changelog-builder-action@v3
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      with:
        configuration: ${{steps.changelog_config_path.outputs.value}}

    - name: Create Release
      uses: softprops/action-gh-release@v0.1.14
      with:
        draft: ${{inputs.draft}}
        prerelease: ${{inputs.draft}}
        name: ${{inputs.name}}
        body: ${{steps.github_release.outputs.changelog}}
        tag_name: ${{steps.tag.outputs.new_tag}}
